@{
    ViewData["Title"] = "Selecciona tu forma de entrega";
}

<div class="container mt-4">
    <h1 class="text-center" style="color: #d62027;">Selecciona tu forma de entrega</h1>

    <!-- Tabs de entrega -->
    <ul class="nav nav-tabs mt-4" id="entregaTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="delivery-tab" data-bs-toggle="tab" data-bs-target="#delivery"
                type="button" role="tab" aria-controls="delivery" aria-selected="true">
                <i class="fa fa-truck"></i> Delivery
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="tienda-tab" data-bs-toggle="tab" data-bs-target="#tienda" type="button"
                role="tab" aria-controls="tienda" aria-selected="false">
                <i class="fa fa-store"></i> Recoger en tienda
            </button>
        </li>
    </ul>

    <!-- Contenido de las pestañas -->
    <div class="tab-content mt-3" id="entregaTabsContent">
        <!-- Tab de Delivery con mapa y búsqueda de dirección -->
        <div class="tab-pane fade show active" id="delivery" role="tabpanel" aria-labelledby="delivery-tab">
            <h4 class="text-center mt-4" style="color: #d62027;">Escribe la dirección a donde enviaremos tu pedido</h4>

            <div class="mb-3">
                <label for="direccion" class="form-label">Dirección</label>
                <input type="text" class="form-control" id="direccion" placeholder="Ingrese una dirección">
                <button type="button" class="btn btn-primary mt-2" onclick="buscarDireccion()"
                    style="background-color: #d62027; color: white;">
                    Buscar
                </button>
            </div>

            <!-- Contenedor del mapa con dimensiones fijas -->
            <div class="map-container">
                <div id="map"></div>
            </div>

            <div class="text-center mt-3">
                <button class="btn btn-link" style="color: #d62027;" onclick="obtenerUbicacionActual()">
                    Usar mi ubicación actual
                </button>
                <p style="font-size: 0.9rem; color: #888;">Margen de precisión: 4 metros</p>
            </div>
        </div>

        <!-- Tab de Recoger en tienda -->
        <div class="tab-pane fade" id="tienda" role="tabpanel" aria-labelledby="tienda-tab">
            <h4 class="text-center mt-4" style="color: #d62027;">Selecciona la tienda donde recogerás tu pedido</h4>

            <div class="row justify-content-center mt-4">
                <div class="col-md-6">
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Miraflores</h5>
                            <p class="card-text">Av. Benavides Nº 1821</p>
                            <a href="/Catalogo/ConfirmarCompra?tienda=Miraflores" class="btn btn-primary"
                                style="background-color: #d62027; color: white;">Recoger aquí</a>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">San Borja</h5>
                            <p class="card-text">Av. Aviación 2800</p>
                            <a href="/Catalogo/ConfirmarCompra?tienda=SanBorja" class="btn btn-primary"
                                style="background-color: #d62027; color: white;">Recoger aquí</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Estilos mejorados -->
<style>
    .nav-tabs .nav-link {
        color: #d62027;
    }

    .nav-tabs .nav-link.active {
        background-color: #ffc107;
        color: #d62027;
        border-color: #ffc107 #ffc107 #fff;
    }

    .map-container {
        position: relative;
        width: 100%;
        height: 400px;
        margin: 20px 0;
        border-radius: 10px;
        overflow: hidden;
    }

    #map {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
</style>

<!-- Scripts mejorados -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

<script>
    let map;
    let marker;

    // Inicializar el mapa cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', function () {
        initMap();

        // Manejar el cambio de tabs
        const deliveryTab = document.getElementById('delivery-tab');
        if (deliveryTab) {
            deliveryTab.addEventListener('shown.bs.tab', function () {
                if (map) {
                    setTimeout(function () {
                        map.invalidateSize();
                        // Si hay un marcador, centrar en él
                        if (marker) {
                            map.setView(marker.getLatLng(), 15);
                        }
                    }, 100);
                }
            });
        }
    });

    function initMap() {
        // Coordenadas iniciales (Lima, Perú)
        const initialCoords = [-12.0464, -77.0428];

        // Crear el mapa
        map = L.map('map', {
            center: initialCoords,
            zoom: 13,
            zoomControl: true
        });

        // Añadir capa de mapa
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Forzar actualización del mapa
        setTimeout(() => map.invalidateSize(), 100);
    }

    function buscarDireccion() {
        const direccion = document.getElementById('direccion').value;
        if (!direccion) {
            alert('Por favor, ingrese una dirección.');
            return;
        }

        // Añadir "Lima, Perú" a la búsqueda para mejorar precisión
        const searchQuery = `${direccion}, Lima, Perú`;

        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}`)
            .then(response => response.json())
            .then(data => {
                if (data && data.length > 0) {
                    const lugar = data[0];
                    const latLng = [parseFloat(lugar.lat), parseFloat(lugar.lon)];

                    // Actualizar o crear marcador
                    if (marker) {
                        marker.setLatLng(latLng);
                    } else {
                        marker = L.marker(latLng).addTo(map);
                    }

                    marker.bindPopup(`Ubicación: ${direccion}`).openPopup();
                    map.setView(latLng, 16);
                } else {
                    alert('No se encontraron resultados para la dirección ingresada.');
                }
            })
            .catch(error => {
                console.error('Error al buscar la dirección:', error);
                alert('Error al buscar la dirección. Por favor, intente nuevamente.');
            });
    }

    function obtenerUbicacionActual() {
        if (!navigator.geolocation) {
            alert('La geolocalización no está soportada por su navegador.');
            return;
        }

        navigator.geolocation.getCurrentPosition(
            function (position) {
                const latLng = [position.coords.latitude, position.coords.longitude];

                // Actualizar o crear marcador
                if (marker) {
                    marker.setLatLng(latLng);
                } else {
                    marker = L.marker(latLng).addTo(map);
                }

                marker.bindPopup('Tu ubicación actual').openPopup();
                map.setView(latLng, 16);

                // Realizar búsqueda inversa para obtener la dirección
                fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latLng[0]}&lon=${latLng[1]}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.display_name) {
                            document.getElementById('direccion').value = data.display_name;
                            marker.bindPopup(`Ubicación: ${data.display_name}`).openPopup();
                        }
                    })
                    .catch(error => console.error('Error en búsqueda inversa:', error));
            },
            function (error) {
                let mensaje = 'Error al obtener la ubicación: ';
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        mensaje += 'Permiso denegado.';
                        break;
                    case error.POSITION_UNAVAILABLE:
                        mensaje += 'Ubicación no disponible.';
                        break;
                    case error.TIMEOUT:
                        mensaje += 'Tiempo de espera agotado.';
                        break;
                    default:
                        mensaje += 'Error desconocido.';
                }
                alert(mensaje);
            }
        );
    }
</script>